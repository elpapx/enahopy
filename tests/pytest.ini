# pytest.ini
# Configuración de pytest para ENAHOPY - CI/CD Optimizado

[tool:pytest]
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Opciones por defecto optimizadas para CI/CD
addopts =
    -ra
    --strict-markers
    --strict-config
    --cov=enahopy
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:.coverage_reports/coverage.json
    --cov-fail-under=16
    --tb=short
    --maxfail=5
    -v
    --color=yes

# Marcadores personalizados
markers =
    slow: marca tests que tardan mucho en ejecutarse (>5s por test)
    integration: tests de integración que requieren múltiples módulos
    edge_case: tests de casos extremos y edge cases
    unit: tests unitarios rápidos
    network: tests que requieren conexión a internet
    datafiles: tests que requieren archivos de datos reales
    visualization: tests de visualización (pueden fallar en CI sin display)
    performance: tests de rendimiento y regresión
    regression: tests de regresión para bugs específicos

# Configuración de coverage
[coverage:run]
source = enahopy
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

# ==========================================
# tox.ini
# Configuración de tox para testing en múltiples entornos

[tox]
envlist = py{38,39,310,311}, lint, docs, coverage
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps =
    pytest>=7.0
    pytest-cov
    pytest-xdist
    pytest-timeout
    pandas>=1.3.0
    numpy>=1.20.0
    requests>=2.25.0
    matplotlib>=3.3.0
    seaborn>=0.11.0

commands =
    pytest {posargs}

[testenv:lint]
deps =
    black
    flake8
    isort
    mypy
    pylint

commands =
    black --check enahopy tests
    flake8 enahopy tests
    isort --check-only enahopy tests
    mypy enahopy
    pylint enahopy

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]

commands =
    coverage run -m pytest
    coverage report
    coverage html

[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme

commands =
    sphinx-build -b html docs docs/_build

# ==========================================
# setup.cfg
# Configuración adicional para herramientas

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .tox,
    htmlcov,
    .venv

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
ignore_missing_imports = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True